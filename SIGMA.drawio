<mxfile host="app.diagrams.net" modified="2022-09-09T01:35:48.410Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36 Edg/105.0.1343.27" etag="ZMYIn7H_-njfPblK1V47" version="20.2.8" type="github">
  <diagram id="kIxsnDEzaFE8jGhAG0Tv" name="第 1 页">
    <mxGraphModel dx="2873" dy="2816" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1200" pageHeight="1920" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="9VyTqNnY38J_3XrKxKob-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-1" target="9VyTqNnY38J_3XrKxKob-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-1" value="tools -&amp;gt; train_net_da.py" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#ffcc99;strokeColor=#36393d;" vertex="1" parent="1">
          <mxGeometry x="-526.25" y="-1765.15" width="140" height="50" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF8000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-3" target="9VyTqNnY38J_3XrKxKob-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-3" value="backbone = build_backbone(cfg).to(device) 49行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;backnone 为 ResNet50 + FPN[p1-p7]&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-1691.4" width="387.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-8" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF8000;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-5" target="9VyTqNnY38J_3XrKxKob-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-36" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-5" target="9VyTqNnY38J_3XrKxKob-35">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-42" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontColor=#000000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-5" target="9VyTqNnY38J_3XrKxKob-40">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-710" y="-1571" />
              <mxPoint x="-710" y="-1785" />
              <mxPoint x="-965" y="-1785" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-5" value="middle_head = build_middle_head(cfg, backbone.out_channels) 53行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;建立图结构&lt;br&gt;1.映射层 2.辅助分类损失 3.注意力机制 4.亲和矩阵 5.鉴别器&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-1601.4" width="387.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-10" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF8000;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-7" target="9VyTqNnY38J_3XrKxKob-11">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-34" y="-1660.15" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-7" value="fcos_core modeling rpn fcos graph_matching_head.py 69行&lt;br&gt;&amp;nbsp;class GModule(torch.nn.Module):" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-196.5" y="-1770.15" width="325" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-14" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF8000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-11" target="9VyTqNnY38J_3XrKxKob-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-11" value="fcos_core modeling rpn fcos graph_matching_head.py109行&amp;nbsp;&lt;br&gt;make_prototype_evaluator(self.cfg)&lt;br&gt;&lt;font color=&quot;#ff9933&quot;&gt;主要是设置一下每个类别需要分裂成多少个原型（100个）&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-199" y="-1680.15" width="330" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-24" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-13" target="9VyTqNnY38J_3XrKxKob-23">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-52" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;entryX=0.999;entryY=0.562;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-13" target="9VyTqNnY38J_3XrKxKob-17">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="200" y="-1555" />
              <mxPoint x="200" y="-784" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-13" value="fcos_core modeling rpn fcos graph_matching_head.py 116行&lt;br&gt;&amp;nbsp;self.head_in_ln = nn.Sequential&lt;br&gt;&lt;font color=&quot;#ffb366&quot;&gt;设置一下 layer_norm的结构&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-199" y="-1585.15" width="330" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-17" value="&lt;div&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: initial;&quot;&gt;Sequential(&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (0): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (1): LayerNorm((256,), eps=1e-05, elementwise_affine=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (2): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (3): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (4): LayerNorm((256,), eps=1e-05, elementwise_affine=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;)&lt;/font&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontColor=#FF9933;align=left;" vertex="1" parent="1">
          <mxGeometry x="-209" y="-851.4" width="350" height="120" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-22" value="" style="group" vertex="1" connectable="0" parent="1">
          <mxGeometry x="110" y="-1585.15" width="110" height="35" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-19" value="Layer Norm &lt;br&gt;结构" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#000000;" vertex="1" parent="9VyTqNnY38J_3XrKxKob-22">
          <mxGeometry x="10" y="-5" width="90" height="40" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-26" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF6666;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-23" target="9VyTqNnY38J_3XrKxKob-25">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-23" value="fcos_core modeling rpn fcos graph_matching_head.py 126行&lt;br&gt;&amp;nbsp;self.node_cls_middle = nn.Sequential&lt;br&gt;&lt;font color=&quot;#ffb366&quot;&gt;设置一下 类别 的全连接结构&amp;nbsp;&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;#ff3333&quot;&gt;注意：这是图结构中的分类，应该是作为辅助损失的！！！&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-199" y="-1490.15" width="330" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-28" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-25" target="9VyTqNnY38J_3XrKxKob-27">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-25" value="fcos_core modeling rpn fcos graph_matching_head.py 133行&lt;br&gt;Graph-guided Memory Bank&lt;br&gt;&lt;font color=&quot;#ff3333&quot;&gt;注册图记忆银行结构&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;#ff0000&quot;&gt;&#39;sr_seed&#39;, torch.randn(self.num_classes, 256)&lt;br&gt;&#39;tg_seed&#39;, torch.randn(self.num_classes, 256)&lt;br&gt;没明白定义一个9*256的矩阵干嘛？&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-199" y="-1400.15" width="330" height="100" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-30" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-27" target="9VyTqNnY38J_3XrKxKob-29">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-27" value="fcos_core modeling rpn fcos graph_matching_head.py 142行&lt;br&gt;Graph-guided Memory Bank&lt;br&gt;&lt;font color=&quot;#ff3333&quot;&gt;跨图交互，和图内交互&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;#ff0000&quot;&gt;self.cross_domain_graph = MultiHeadAttention&lt;br&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;self.intra_domain_graph = MultiHeadAttention&lt;/span&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-199" y="-1271.4" width="330" height="100" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-32" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-29" target="9VyTqNnY38J_3XrKxKob-34">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-219" y="-941.4" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-29" value="fcos_core modeling rpn fcos graph_matching_head.py 146行&lt;br&gt;self.node_affinity = Affinity(d=256)&lt;br&gt;&lt;font color=&quot;#ff3333&quot;&gt;亲和矩阵计算&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;#ff0000&quot;&gt;主要还是利用全连接层进行运算&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-199" y="-1141.4" width="330" height="70" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-34" value="&lt;div&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: initial;&quot;&gt;Affinity(&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;div&gt;&amp;nbsp; (fc_M): Sequential(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; (0): Linear(in_features=512, out_features=512, bias=True)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; (1): ReLU()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; (2): Linear(in_features=512, out_features=1, bias=True)&lt;/div&gt;&lt;div&gt;&amp;nbsp; )&lt;/div&gt;&lt;div&gt;&amp;nbsp; (project_sr): Linear(in_features=256, out_features=256, bias=False)&lt;/div&gt;&lt;div&gt;&amp;nbsp; (project_tg): Linear(in_features=256, out_features=256, bias=False)&lt;/div&gt;&lt;div&gt;)&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontColor=#FF9933;align=left;" vertex="1" parent="1">
          <mxGeometry x="-209" y="-1032.5" width="382.5" height="145" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-45" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-35" target="9VyTqNnY38J_3XrKxKob-44">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-54" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;entryX=0.468;entryY=-0.003;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-35" target="9VyTqNnY38J_3XrKxKob-38">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-700" y="-1160" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-710" y="-1481" />
              <mxPoint x="-710" y="-790" />
              <mxPoint x="-979" y="-790" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-35" value="fcos = build_rpn(cfg, backbone.out_channels).to(device) 54行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;建立FCOS结构&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-1511.4" width="387.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-38" value="&lt;div&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: initial;&quot;&gt;FCOSModule(&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (head): FCOSHead(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (cls_tower): Sequential(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (1): GroupNorm(32, 256, eps=1e-05, affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (2): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (4): GroupNorm(32, 256, eps=1e-05, affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (5): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (7): GroupNorm(32, 256, eps=1e-05, affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (8): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (10): GroupNorm(32, 256, eps=1e-05, affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (11): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (bbox_tower): Sequential(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (1): GroupNorm(32, 256, eps=1e-05, affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (2): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (4): GroupNorm(32, 256, eps=1e-05, affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (5): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (7): GroupNorm(32, 256, eps=1e-05, affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (8): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (10): GroupNorm(32, 256, eps=1e-05, affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (11): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (cls_logits): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (centerness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (scales): ModuleList(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (0): Scale()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (1): Scale()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (2): Scale()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (3): Scale()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (4): Scale()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (box_selector_test): FCOSPostProcessor()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;)&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontColor=#FF9933;align=left;" vertex="1" parent="1">
          <mxGeometry x="-1190" y="-770" width="450" height="630" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-40" value="&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;GModule(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (head_in_ln): Sequential(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (0): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (1): LayerNorm((256,), eps=1e-05, elementwise_affine=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (2): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (3): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (4): LayerNorm((256,), eps=1e-05, elementwise_affine=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (node_cls_middle): Sequential(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (0): Linear(in_features=256, out_features=512, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (1): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (2): Linear(in_features=512, out_features=9, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (seed_project_left): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (cross_domain_graph): MultiHeadAttention(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (linear_k): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (linear_v): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (linear_q): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (dot_product_attention): dot_attention(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (dropout): Dropout(p=0.1, inplace=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (softmax): Softmax(dim=2)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (linear_final): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (dropout): Dropout(p=0.1, inplace=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (intra_domain_graph): MultiHeadAttention(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (linear_k): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (linear_v): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (linear_q): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (dot_product_attention): dot_attention(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (dropout): Dropout(p=0.1, inplace=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (softmax): Softmax(dim=2)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (linear_final): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (dropout): Dropout(p=0.1, inplace=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (node_affinity): Affinity(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (fc_M): Sequential(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (0): Linear(in_features=512, out_features=512, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (1): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (2): Linear(in_features=512, out_features=1, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (project_sr): Linear(in_features=256, out_features=256, bias=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (project_tg): Linear(in_features=256, out_features=256, bias=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (InstNorm_layer): InstanceNorm2d(1, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (matching_loss): MSELoss()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (quadratic_loss): L1Loss()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (grad_reverse): GradientReversal()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (node_dis_2): Sequential(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (0): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (1): LayerNorm((256,), eps=1e-05, elementwise_affine=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (2): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (3): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (4): LayerNorm((256,), eps=1e-05, elementwise_affine=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (5): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (6): Linear(in_features=256, out_features=256, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (7): LayerNorm((256,), eps=1e-05, elementwise_affine=False)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (8): ReLU()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; (9): Linear(in_features=256, out_features=1, bias=True)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; (loss_fn): BCEWithLogitsLoss()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;)&lt;/font&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontColor=#FF9933;align=left;" vertex="1" parent="1">
          <mxGeometry x="-1190" y="-1765.15" width="450" height="960" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-47" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-44" target="9VyTqNnY38J_3XrKxKob-46">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-44" value="if cfg.MODEL.ADV.USE_DIS_GLOBAL: 275行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;为backbone不同特征层建立鉴别器&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-1426.4" width="387.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-49" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-46" target="9VyTqNnY38J_3XrKxKob-48">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-46" value="data_loader[&quot;source&quot;] = make_data_loader_source 564行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;为数据集建立data_loader&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-1341.4" width="387.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-48" value="do_train(MODEL,data_loader,optimizer,scheduler,checkpointer,device,&lt;br&gt;checkpoint_period,arguments,cfg,distributed,meters,) 601行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;开始训练&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-1261.4" width="387.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-76" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#000000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-63" target="9VyTqNnY38J_3XrKxKob-65">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-63" value="fcos_core -&amp;gt; engine -&amp;gt; trainer.py" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#ffcc99;strokeColor=#36393d;" vertex="1" parent="1">
          <mxGeometry x="-566.25" y="-1141.4" width="220" height="50" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-64" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF8000;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-65" target="9VyTqNnY38J_3XrKxKob-79">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-456.2666666666669" y="-967.6500000000001" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-65" value="features_s = model_backbone(images_s.tensors) &lt;br&gt;features_t = model_backbone(images_t.tensors) 60行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;送入backbone获取特征&lt;br&gt;特征形状 [ batch, 256, h, w ]&amp;nbsp;&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-1070.5" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-81" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF8000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-79" target="9VyTqNnY38J_3XrKxKob-80">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-96" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#FF3333;strokeWidth=2;fontSize=15;fontColor=#FF8000;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-79" target="9VyTqNnY38J_3XrKxKob-90">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="500" y="-1810" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-240" y="-936" />
              <mxPoint x="-240" y="-710" />
              <mxPoint x="220" y="-710" />
              <mxPoint x="220" y="-1810" />
              <mxPoint x="454" y="-1810" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-79" value="proposals, proposal_losses, _ = &lt;br&gt;model_fcos( images_s, features_s, targets=targets)&amp;nbsp;62行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;特征送入fcos里面获取对应的损失&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-971.02" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-80" value="features_s = model_backbone(images_s.tensors) &lt;br&gt;features_t = model_backbone(images_t.tensors) 60行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;送入backbone获取特征&lt;br&gt;特征形状 [ batch, 256, h, w ]&amp;nbsp;&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="-650" y="-871.4000000000001" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-83" value="" style="group" vertex="1" connectable="0" parent="1">
          <mxGeometry x="-531" y="-1187" width="80" height="30" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-82" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF8000;" edge="1" parent="9VyTqNnY38J_3XrKxKob-83" source="9VyTqNnY38J_3XrKxKob-48" target="9VyTqNnY38J_3XrKxKob-63">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-61" value="&lt;font style=&quot;font-size: 15px;&quot;&gt;训练代码&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#000000;strokeWidth=6;" vertex="1" parent="9VyTqNnY38J_3XrKxKob-83">
          <mxGeometry width="80" height="30" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-89" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#000000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-90" target="9VyTqNnY38J_3XrKxKob-92">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-90" value="fcos_core -&amp;gt; modeling -&amp;gt; fcos -&amp;gt; fcos.py" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#ffcc99;strokeColor=#36393d;" vertex="1" parent="1">
          <mxGeometry x="316.88" y="-1770.15" width="273.75" height="50" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-91" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF8000;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-92" target="9VyTqNnY38J_3XrKxKob-94">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="453.7333333333331" y="-1585.8000000000002" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-92" value="box_cls, box_regression, centerness = &lt;br&gt;self.head(features, act_maps) 159行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;特征送入检测头中预测类别和对应中心点的4个参数，并且还有&lt;br&gt;一个额外的centerness预测&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="260" y="-1688.65" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-93" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF8000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-94" target="9VyTqNnY38J_3XrKxKob-95">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-94" value="locations = self.compute_locations(features) 161行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;计算所有不同层的location的总和，&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;目前不知道是什么&lt;/b&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="260.01" y="-1591.5500000000002" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-98" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF0000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-95" target="9VyTqNnY38J_3XrKxKob-97">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-95" value="locations_per_level = self.compute_locations_per_level 229行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;获取单独层的localtion&lt;/font&gt;&lt;font color=&quot;#ff8000&quot;&gt;，&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;目前不知道是什么&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#ff8000&quot;&gt;&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="260" y="-1489.5500000000002" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-100" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF0000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-97" target="9VyTqNnY38J_3XrKxKob-99">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-97" value="return self._forward_train_source 172行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;计算源域的损失&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="260.01" y="-1384.7700000000002" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-112" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF0000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-99" target="9VyTqNnY38J_3XrKxKob-102">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="680" y="-1246" />
              <mxPoint x="680" y="-1790" />
              <mxPoint x="894" y="-1790" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-99" value="self.loss_evaluator 190行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;送入预测和类别，框，和中心点，以及localtion计算损失&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="260.01" y="-1281.4" width="387.5" height="71.4" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-101" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#000000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-102" target="9VyTqNnY38J_3XrKxKob-104">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-102" value="fcos_core -&amp;gt; modeling -&amp;gt; fcos -&amp;gt; loss.py" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#ffcc99;strokeColor=#36393d;" vertex="1" parent="1">
          <mxGeometry x="756.88" y="-1770.15" width="273.75" height="50" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-103" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF8000;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-104" target="9VyTqNnY38J_3XrKxKob-106">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="893.7333333333331" y="-1585.8000000000002" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-104" value="labels, reg_targets = self.prepare_targets(locations, targets) 186行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;送入gt和locations&lt;/font&gt;&lt;font color=&quot;#ff8000&quot;&gt;，&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;locations其实就是特征图每个点的位置&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#ff8000&quot;&gt;&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="700" y="-1688.65" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-105" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF8000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-106" target="9VyTqNnY38J_3XrKxKob-108">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-106" value="expanded_object_sizes_of_interest = torch.cat(expanded_object_sizes_of_interest, dim=0) 58行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;分配一下框分配到哪个大小的特征图进行计算损失，类似FPN&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="700.01" y="-1591.5500000000002" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-107" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF0000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-108" target="9VyTqNnY38J_3XrKxKob-110">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-108" value="labels, reg_targets = self.compute_targets_for_locations 61行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;获取labels，targets，&lt;/font&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;locations其实就是特征图每个点的位置&lt;/b&gt;&lt;font color=&quot;#ff8000&quot;&gt;&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="700" y="-1489.5500000000002" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-109" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#000000;strokeWidth=1;fontSize=15;fontColor=#FF0000;" edge="1" parent="1" source="9VyTqNnY38J_3XrKxKob-110" target="9VyTqNnY38J_3XrKxKob-111">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-110" value="is_in_boxes = reg_targets_per_im.min(dim=2)[0] &amp;gt; 0 106行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;过滤掉那些不在框内的点，其实就是将点分配到GT里面&lt;/font&gt;&lt;font color=&quot;#ff8000&quot;&gt;&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="700.01" y="-1384.7700000000002" width="387.5" height="69.25" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-111" value="max_reg_targets_per_im = reg_targets_per_im.max(dim=2)[0] 108行&lt;br&gt;locations_to_gt_area.min(dim=1) 120行&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;根据中心点到框四条边的max值，作为分配特征尺度策略&lt;br&gt;并且如果有的点被多个框所包含，选择面积最小的&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="700.01" y="-1281.4" width="387.5" height="71.4" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-113" value="" style="shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;flipH=1;strokeWidth=1;fontSize=15;fontColor=#FF3333;size=0.5;" vertex="1" parent="1">
          <mxGeometry x="1090" y="-1691.4" width="40" height="480" as="geometry" />
        </mxCell>
        <mxCell id="9VyTqNnY38J_3XrKxKob-114" value="&lt;font style=&quot;font-size: 12px;&quot; color=&quot;#ff0000&quot;&gt;&lt;b&gt;对回归标签进行GT建模&lt;br&gt;对label进行分配&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;color: rgb(0, 0, 0); font-size: 12px;&quot;&gt;&lt;font color=&quot;#ff3333&quot;&gt;对框进行多尺度的分配&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=15;fontColor=#FF3333;" vertex="1" parent="1">
          <mxGeometry x="1115" y="-1486.4" width="150" height="70" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
